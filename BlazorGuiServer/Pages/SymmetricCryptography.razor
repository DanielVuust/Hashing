@page "/symmetricCryptography"
@using BlazorGuiServer.Data.Services
@using BlazorGuiServer.Data.Services.Managers
@using System.Text

@inject SymmetricAlgorithmsManagerService SymmetricAlgorithmsManagerService

<p>Key: @Convert.ToBase64String(Key);</p><br/>
<p>Iv: @Convert.ToBase64String(Iv)</p><br/>

<p>Text to encrypt</p> <input placeholder="Enter your text" @bind="@TextToEncrypt" />
<br/>

<select class="form-control" @bind="@SelectedSymmetricAlgorithm" style="width:150px">
    @foreach (var template in SupportedSymmetricAlgorithms)
    {
        <option value=@template>@template</option>
    }
</select>

<br/>

<button @onclick="@EncryptText">Encrypt text</button>
<p>Cyphertext:</p><br/>
<p>Base64: @Convert.ToBase64String(EncryptedBytes)</p><br/>
<p>Hex: @Convert.ToHexString(EncryptedBytes)</p>

<br/>
<button @onclick="@DecryptText">Decrypt text</button>
<p>Decrypted text:</p>
<br />
<p>Text: @DecryptedText</p><br/>
<p>Hex: @Convert.ToHexString(Encoding.Unicode.GetBytes(DecryptedText))</p>
@code {
    protected List<string>? SupportedSymmetricAlgorithms;
    protected string SelectedSymmetricAlgorithm = "";
    protected byte[] Key = Array.Empty<byte>();
    protected byte[] Iv = Array.Empty<byte>();
    protected string TextToEncrypt = "";
    protected byte[] EncryptedBytes = Array.Empty<byte>();
    protected string DecryptedText = "";


    protected override void OnInitialized()
    {
        SupportedSymmetricAlgorithms = SymmetricAlgorithmsManagerService.GetSupportedSymmetricAlgorithms();
        SelectedSymmetricAlgorithm = SupportedSymmetricAlgorithms.First();
        StateHasChanged();
    }
    protected void EncryptText()
    {
        var result = SymmetricAlgorithmsManagerService.EncryptMessage(this.TextToEncrypt, this.SelectedSymmetricAlgorithm).Value;
        Key = result.EncryptionKey;
        Iv = result.EncryptionIv;
        EncryptedBytes = result.EncryptedMessage;
    }
    protected void DecryptText()
    {
        this.DecryptedText = SymmetricAlgorithmsManagerService.DecryptEncryptedMessage(this.EncryptedBytes, this.Key, this.Iv, this.SelectedSymmetricAlgorithm).ValueOrDefault;
    }
}